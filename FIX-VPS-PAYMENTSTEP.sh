#!/bin/bash

echo "üîß CORRECTION IMM√âDIATE PaymentStep.jsx SUR VPS"
echo "=============================================="
echo ""
echo "EX√âCUTEZ CES COMMANDES SUR VOTRE VPS:"
echo ""
echo "# 1. Aller dans le dossier"
echo "cd /var/www/bennespro"
echo ""
echo "# 2. Supprimer l'import Stripe de PaymentStep.jsx"
echo "sed -i '/import.*stripePromise.*from.*stripe/d' client/src/components/booking/PaymentStep.jsx"
echo "sed -i '/import.*Elements.*from.*stripe/d' client/src/components/booking/PaymentStep.jsx"
echo "sed -i '/import.*CardElement.*from.*stripe/d' client/src/components/booking/PaymentStep.jsx"
echo "sed -i '/import.*useStripe.*from.*stripe/d' client/src/components/booking/PaymentStep.jsx"
echo "sed -i '/import.*useElements.*from.*stripe/d' client/src/components/booking/PaymentStep.jsx"
echo ""
echo "# 3. Cr√©er un fichier stripe.js complet avec tous les exports"
echo "cat > client/src/lib/stripe.js << 'EOF'"
echo "// STRIPE COMPL√àTEMENT D√âSACTIV√â - PAYPLUG ONLY"
echo "console.warn('Stripe d√©sactiv√© - Utilisation de PayPlug');"
echo ""
echo "// Exports vides pour compatibilit√©"
echo "export const stripePromise = null;"
echo "export const stripe = null;"
echo "export const loadStripe = () => null;"
echo "export const Stripe = null;"
echo "export const Elements = ({ children }) => children;"
echo "export const CardElement = () => null;"
echo "export const useStripe = () => null;"
echo "export const useElements = () => null;"
echo ""
echo "export default null;"
echo "EOF"
echo ""
echo "# 4. Alternative: Remplacer tout PaymentStep.jsx par une version PayPlug"
echo "# Si l'√©tape 2 ne suffit pas, cr√©er un nouveau PaymentStep"
echo "cat > client/src/components/booking/PaymentStep.jsx << 'EOF'"
echo "import React from 'react';"
echo "import { Button } from '@/components/ui/button';"
echo "import { Card } from '@/components/ui/card';"
echo "import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';"
echo "import { useBookingState } from '@/hooks/useBookingState';"
echo "import { apiRequest } from '@/lib/queryClient';"
echo "import { useToast } from '@/hooks/use-toast';"
echo "import { Label } from '@/components/ui/label';"
echo "import { CreditCard, Building2, Euro } from 'lucide-react';"
echo ""
echo "export function PaymentStep() {"
echo "  const { bookingData } = useBookingState();"
echo "  const { toast } = useToast();"
echo "  const [paymentMethod, setPaymentMethod] = React.useState('card');"
echo "  const [isProcessing, setIsProcessing] = React.useState(false);"
echo ""
echo "  const handlePayment = async () => {"
echo "    if (!bookingData.pricing) {"
echo "      toast({ title: 'Erreur', description: 'Donn√©es de tarification manquantes', variant: 'destructive' });"
echo "      return;"
echo "    }"
echo ""
echo "    setIsProcessing(true);"
echo "    try {"
echo "      // Cr√©er le paiement PayPlug"
echo "      const response = await apiRequest('/api/payments/create', {"
echo "        method: 'POST',"
echo "        body: {"
echo "          amount: Math.round(bookingData.pricing.totalPrice * 100),"
echo "          currency: 'EUR',"
echo "          email: bookingData.email,"
echo "          firstName: bookingData.firstName,"
echo "          lastName: bookingData.lastName,"
echo "          metadata: {"
echo "            serviceId: bookingData.serviceId,"
echo "            startDate: bookingData.startDate,"
echo "            endDate: bookingData.endDate"
echo "          }"
echo "        }"
echo "      });"
echo ""
echo "      if (response.hosted_payment_url) {"
echo "        window.location.href = response.hosted_payment_url;"
echo "      } else {"
echo "        throw new Error('URL de paiement non re√ßue');"
echo "      }"
echo "    } catch (error) {"
echo "      console.error('Erreur paiement:', error);"
echo "      toast({"
echo "        title: 'Erreur de paiement',"
echo "        description: 'Une erreur est survenue lors du paiement. Veuillez r√©essayer.',"
echo "        variant: 'destructive'"
echo "      });"
echo "    } finally {"
echo "      setIsProcessing(false);"
echo "    }"
echo "  };"
echo ""
echo "  return ("
echo "    <div className='space-y-6'>"
echo "      <Card className='p-6'>"
echo "        <h3 className='text-lg font-semibold mb-4'>R√©capitulatif de la commande</h3>"
echo "        <div className='space-y-2 text-sm'>"
echo "          <div className='flex justify-between'>"
echo "            <span>Service</span>"
echo "            <span className='font-medium'>{bookingData.serviceName || 'Service s√©lectionn√©'}</span>"
echo "          </div>"
echo "          <div className='flex justify-between'>"
echo "            <span>Dur√©e</span>"
echo "            <span className='font-medium'>{bookingData.startDate} - {bookingData.endDate}</span>"
echo "          </div>"
echo "          <div className='border-t pt-2 mt-2'>"
echo "            <div className='flex justify-between font-semibold'>"
echo "              <span>Total TTC</span>"
echo "              <span>{bookingData.pricing?.totalPrice || 0} ‚Ç¨</span>"
echo "            </div>"
echo "          </div>"
echo "        </div>"
echo "      </Card>"
echo ""
echo "      <Card className='p-6'>"
echo "        <h3 className='text-lg font-semibold mb-4'>Mode de paiement</h3>"
echo "        <RadioGroup value={paymentMethod} onValueChange={setPaymentMethod}>"
echo "          <div className='flex items-center space-x-2 p-3 border rounded-lg hover:bg-gray-50'>"
echo "            <RadioGroupItem value='card' id='card' />"
echo "            <Label htmlFor='card' className='flex items-center gap-2 cursor-pointer flex-1'>"
echo "              <CreditCard className='h-5 w-5' />"
echo "              <span>Carte bancaire (PayPlug s√©curis√©)</span>"
echo "            </Label>"
echo "          </div>"
echo "          <div className='flex items-center space-x-2 p-3 border rounded-lg hover:bg-gray-50'>"
echo "            <RadioGroupItem value='transfer' id='transfer' />"
echo "            <Label htmlFor='transfer' className='flex items-center gap-2 cursor-pointer flex-1'>"
echo "              <Building2 className='h-5 w-5' />"
echo "              <span>Virement bancaire</span>"
echo "            </Label>"
echo "          </div>"
echo "        </RadioGroup>"
echo "      </Card>"
echo ""
echo "      <Button"
echo "        onClick={handlePayment}"
echo "        disabled={isProcessing}"
echo "        className='w-full'"
echo "        size='lg'"
echo "      >"
echo "        {isProcessing ? 'Traitement...' : 'Proc√©der au paiement s√©curis√©'}"
echo "      </Button>"
echo ""
echo "      <p className='text-xs text-gray-500 text-center'>"
echo "        Paiement s√©curis√© par PayPlug. Vos donn√©es bancaires sont prot√©g√©es."
echo "      </p>"
echo "    </div>"
echo "  );"
echo "}"
echo "EOF"
echo ""
echo "# 5. Rebuild"
echo "npm run build"
echo ""
echo "echo '‚úÖ PaymentStep.jsx corrig√© - Plus aucune r√©f√©rence Stripe'"