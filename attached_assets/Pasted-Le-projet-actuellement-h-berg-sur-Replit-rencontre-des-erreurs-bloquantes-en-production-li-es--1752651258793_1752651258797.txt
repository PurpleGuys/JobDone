Le projet actuellement h√©berg√© sur Replit rencontre des erreurs bloquantes en production li√©es :

√† une mauvaise configuration de la Content Security Policy (CSP)

√† la pr√©sence r√©siduelle de Stripe, alors que le syst√®me de paiement est cens√© fonctionner exclusivement avec Payplug

üî• Voici les erreurs actuelles remont√©es dans la console :
pgsql
Copier
Modifier
booking:1 Refused to load the script 'https://replit.com/public/js/replit-dev-banner.js' because it violates the following Content Security Policy directive: "script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.payplug.com https://secure.payplug.com https://api.payplug.com https://maps.googleapis.com https://maps.gstatic.com". Note that 'script-src-elem' was not explicitly set, so 'script-src' is used as a fallback.

index-CUaOr6u0.js:498 Refused to load the script 'https://js.stripe.com/basil/stripe.js' because it violates the following Content Security Policy directive: "script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.payplug.com https://secure.payplug.com https://api.payplug.com https://maps.googleapis.com https://maps.gstatic.com".

Uncaught Error: Missing required Stripe key: VITE_STRIPE_PUBLIC_KEY  
Error: Failed to load Stripe.js
üß© Constats techniques :
Le script Stripe tente encore d‚Äô√™tre charg√© malgr√© la suppression suppos√©e de Stripe du projet.

La cl√© VITE_STRIPE_PUBLIC_KEY est toujours recherch√©e dans les variables d‚Äôenvironnement, ce qui provoque une erreur critique.

Le chargement du script https://replit.com/public/js/replit-dev-banner.js viole la CSP actuelle.

La directive script-src est mal d√©finie (ou incompl√®te), ce qui provoque des erreurs CORS et emp√™che les scripts tiers de se charger (y compris ceux l√©gitimes comme Payplug ou Google Maps).

üéØ Objectifs attendus de la correction (non n√©gociables) :
Suppression compl√®te de Stripe

Supprimer tous les packages li√©s √† Stripe du package.json (par exemple stripe, @stripe/react-stripe-js, etc.)

Supprimer toutes les r√©f√©rences √† Stripe dans :

les fichiers frontend et backend

les fichiers .env, .env.production, .env.local

les composants React / Vue / autres

les hooks, middleware, scripts de paiement, webhooks, validations

Supprimer les appels r√©siduels √† l‚ÄôAPI Stripe (ex. : https://js.stripe.com, stripe.confirmCardPayment(), etc.)

Supprimer les composants <Elements>, <StripeProvider> ou √©quivalents

Int√©gration compl√®te et propre de Payplug

Impl√©menter les appels REST Payplug selon la documentation officielle :
https://www.payplug.com/fr/documentation/api

G√©rer les sc√©narios suivants :

cr√©ation de paiement

redirection vers le checkout Payplug

gestion du retour (succ√®s, √©chec)

v√©rification du statut

Ajouter les headers et endpoints n√©cessaires au backend (avec validation serveur).

Pr√©voir les champs API_KEY ou AUTHORIZATION dans le .env.

Mise √† jour pr√©cise de la Content Security Policy (CSP)

Ajouter explicitement les sources suivantes dans la directive script-src :

'self'

'unsafe-inline' (temporaire uniquement si besoin)

'unsafe-eval' (√† √©viter si possible)

https://cdn.payplug.com

https://secure.payplug.com

https://api.payplug.com

https://maps.googleapis.com

https://maps.gstatic.com

(si besoin) https://replit.com/public/js/replit-dev-banner.js

V√©rifier que la directive script-src-elem est bien d√©finie, ou que script-src suffit √† couvrir tous les cas.

Si n√©cessaire, ajouter des directives compl√©mentaires pour connect-src, frame-src, style-src en fonction des appels Payplug/Maps utilis√©s.

V√©rification du fonctionnement en environnement VPS

Le build (npm run build) doit fonctionner sans aucune erreur ni avertissement.

Le d√©marrage (npm run start) doit fonctionner imm√©diatement sur un serveur Linux VPS (Ubuntu 22.04).

Tous les appels API doivent fonctionner sans CORS ni erreurs li√©es √† la CSP ou aux scripts.

‚úÖ R√©sultat attendu :
‚úÖ Plus aucune trace de Stripe dans tout le code.

‚úÖ Payplug 100 % op√©rationnel, stable, s√©curis√©.

‚úÖ La CSP doit √™tre correctement configur√©e et respect√©e.

‚úÖ L‚Äôapp fonctionne en local, sur Replit et sur un VPS de production.

‚úÖ Le projet est propre, sans erreurs en console.

Pas de contournement. Pas de suppression sauvage de directives. Pas de mise en commentaire de scripts bloquants.
Je veux une correction propre, durable, dans l‚Äôaxe, 100 % fonctionnelle en production.

Souhaites-tu que je t‚Äô√©crive aussi un content-security-policy complet ou une base de paymentController.js adapt√© √† Payplug ?