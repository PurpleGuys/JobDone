#!/bin/bash

echo "üîß FORCE DES CL√âS STRIPE DE PRODUCTION"
echo "====================================="

# Cl√©s de production
PK_LIVE="pk_live_51RTkOEH7j6Qmye8ANaVnmmha9hqIUhENTbJo94UZ9D7Ia3hRu7jFbVcBtfO4lJvLiluHxqdproixaCIglmZORP0h00IWlpRCiS"
SK_LIVE="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"

# 1. Forcer dans TOUS les fichiers TypeScript et JavaScript
echo "1. Remplacement dans les fichiers source..."
find client/src -type f \( -name "*.ts" -o -name "*.tsx" -o -name "*.js" -o -name "*.jsx" \) -exec sed -i "s/import\.meta\.env\.VITE_STRIPE_PUBLIC_KEY/'$PK_LIVE'/g" {} \;

# 2. Nettoyer compl√®tement
echo "2. Nettoyage complet..."
rm -rf dist
rm -rf node_modules/.vite
rm -rf client/.vite

# 3. Build avec variables forc√©es
echo "3. Build avec cl√©s de production..."
export NODE_ENV=production
export VITE_STRIPE_PUBLIC_KEY="$PK_LIVE"
export STRIPE_SECRET_KEY="$SK_LIVE"

npm run build

# 4. V√©rifier et corriger le build si n√©cessaire
echo "4. V√©rification du build..."
if grep -r "VITE_STRIPE_PUBLIC_KEY" dist/ 2>/dev/null; then
    echo "Correction post-build n√©cessaire..."
    find dist -type f -name "*.js" -exec sed -i "s/VITE_STRIPE_PUBLIC_KEY/'$PK_LIVE'/g" {} \;
fi

# 5. S'assurer qu'aucune r√©f√©rence aux cl√©s de test
find dist -type f -name "*.js" -exec sed -i "s/pk_test[^ \"']*/$PK_LIVE/g" {} \;

echo ""
echo "‚úÖ TERMIN√â!"
echo "Les cl√©s de production sont maintenant hardcod√©es dans l'application."