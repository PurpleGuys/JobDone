# Configuration Nginx qui force les types MIME corrects
server {
    listen 80;
    listen [::]:80;
    server_name purpleguy.world www.purpleguy.world;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name purpleguy.world www.purpleguy.world;

    # SSL
    ssl_certificate /etc/letsencrypt/live/purpleguy.world/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/purpleguy.world/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    
    # Headers sécurité (sans nosniff pour les assets)
    add_header Strict-Transport-Security "max-age=31536000" always;
    
    client_max_body_size 50M;
    
    # FORCER LES TYPES MIME POUR LES ASSETS
    location ~* /assets/.*\.js$ {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        
        # FORCER le type MIME
        proxy_hide_header Content-Type;
        add_header Content-Type "application/javascript; charset=utf-8";
        proxy_buffering off;
    }
    
    location ~* /assets/.*\.css$ {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        
        # FORCER le type MIME
        proxy_hide_header Content-Type;
        add_header Content-Type "text/css; charset=utf-8";
        proxy_buffering off;
    }
    
    # Autres fichiers statiques
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        
        # Types MIME basés sur l'extension
        location ~* \.js$ {
            proxy_hide_header Content-Type;
            add_header Content-Type "application/javascript; charset=utf-8";
        }
        location ~* \.css$ {
            proxy_hide_header Content-Type;
            add_header Content-Type "text/css; charset=utf-8";
        }
        location ~* \.(png|jpg|jpeg|gif)$ {
            proxy_hide_header Content-Type;
            add_header Content-Type "image/jpeg";
        }
        location ~* \.svg$ {
            proxy_hide_header Content-Type;
            add_header Content-Type "image/svg+xml";
        }
        location ~* \.(woff|woff2)$ {
            proxy_hide_header Content-Type;
            add_header Content-Type "font/woff2";
        }
        
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # API routes
    location /api/ {
        proxy_pass http://localhost:5000/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Application React
    location / {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_cache_bypass $http_upgrade;
    }
}