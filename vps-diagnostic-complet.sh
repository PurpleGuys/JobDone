#!/bin/bash

# DIAGNOSTIC COMPLET VPS - IDENTIFIER LE PROBL√àME EXACT
echo "üîç DIAGNOSTIC COMPLET VPS BENNESPRO"
echo "==================================="

# 1. √âtat des containers
echo "üì¶ √âtat des containers Docker:"
sudo docker ps -a --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

echo ""
echo "üåê Ports en √©coute sur le syst√®me:"
sudo netstat -tlnp | grep -E ":80|:443|:8080|:5000|:5432|:6379"

echo ""
echo "üî• Logs du container application (derni√®res 50 lignes):"
sudo docker logs --tail 50 bennespro_app

echo ""
echo "üêò Test direct PostgreSQL:"
sudo docker exec bennespro_postgres psql -U postgres -d bennespro -c "SELECT COUNT(*) as services_count FROM services;"

echo ""
echo "üìä Test direct de l'API dans le container:"
sudo docker exec bennespro_app sh -c "curl -s http://localhost:5000/api/health" || echo "‚ùå API interne non accessible"

echo ""
echo "üîå Test connectivit√© r√©seau container:"
sudo docker exec bennespro_app sh -c "netstat -tlnp | grep :5000" || echo "‚ùå Port 5000 non en √©coute"

echo ""
echo "üåç Test depuis l'h√¥te VPS:"
echo "Test localhost:8080:"
curl -s --connect-timeout 5 http://localhost:8080/api/health || echo "‚ùå Localhost:8080 non accessible"

echo ""
echo "Test 127.0.0.1:8080:"
curl -s --connect-timeout 5 http://127.0.0.1:8080/api/health || echo "‚ùå 127.0.0.1:8080 non accessible"

echo ""
echo "üîß Configuration docker-compose actuelle:"
grep -A 20 "app:" docker-compose.yml 2>/dev/null || echo "‚ùå docker-compose.yml non trouv√©"

echo ""
echo "üìù Variables d'environnement du container:"
sudo docker exec bennespro_app env | grep -E "NODE_ENV|DATABASE_URL|PORT"

echo ""
echo "üèóÔ∏è Processus dans le container:"
sudo docker exec bennespro_app ps aux

echo ""
echo "üîç R√âSUM√â DIAGNOSTIC:"
echo "===================="

# Test de base
if sudo docker exec bennespro_app curl -s http://localhost:5000/api/health > /dev/null 2>&1; then
    echo "‚úÖ Application fonctionne DANS le container"
else
    echo "‚ùå Application ne fonctionne PAS dans le container"
fi

if curl -s --connect-timeout 2 http://localhost:8080/api/health > /dev/null 2>&1; then
    echo "‚úÖ Port 8080 accessible depuis l'h√¥te"
else
    echo "‚ùå Port 8080 NON accessible depuis l'h√¥te"
fi

# V√©rifier si le port est mapp√©
PORT_MAPPING=$(sudo docker port bennespro_app 2>/dev/null)
if [ -n "$PORT_MAPPING" ]; then
    echo "‚úÖ Port mapping: $PORT_MAPPING"
else
    echo "‚ùå Aucun port mapping trouv√©"
fi

echo ""
echo "üéØ ACTIONS RECOMMAND√âES:"
echo "======================="
echo "1. Si l'app fonctionne dans le container mais pas sur 8080:"
echo "   ‚Üí Probl√®me de port mapping Docker"
echo "2. Si l'app ne fonctionne pas dans le container:"
echo "   ‚Üí Probl√®me de d√©marrage de l'application"
echo "3. Si aucune connexion DB:"
echo "   ‚Üí Probl√®me de configuration DATABASE_URL"